@using System.Threading.Tasks
@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
        .ToList();
}

    <li class="nav-item dropdown">
        <form id="selectLanguage" asp-controller="Home"
              asp-action="SetLanguage" asp-route-returnUrl="@Context.Request.Path"
              method="post" class="form-horizontal" role="form">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown"
               role="form" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @Localizer["Language"]
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                <button class="dropdown-item" asp-route-culture="ar" asp-controller="home" asp-action="SetLanguage" asp-route-returnUrl="@Context.Request.Path">@Localizer["Arabic"]</button>
                <button class="dropdown-item" asp-route-culture="en" asp-controller="home" asp-action="SetLanguage" asp-route-returnUrl="@Context.Request.Path">@Localizer["English"]</button>
                @*<select class="dropdown-item" name="culture"
                        asp-for="@requestCulture.RequestCulture.UICulture.Name"
                        asp-items="cultureItems" onchange="document.getElementById('selectLanguage').submit();"></select>*@
            </div>
        </form>
    </li>